// ===================================================
// 1. DECLARA√á√ïES INICIAIS (TOPO DO ARQUIVO)
// ===================================================

const apiKey = "AIzaSyAvCBl8AKuIBL02xIjnnTywvWrj0VfliMw"; 
let ai; // A vari√°vel 'ai' √© declarada aqui, mas ser√° inicializada depois


// ===================================================
// 2. INICIALIZA√á√ÉO ROBUSTA DA API (Ap√≥s o DOM estar pronto)
// ===================================================
document.addEventListener('DOMContentLoaded', function() {
    // Usamos um pequeno atraso para dar tempo extra para o script do CDN carregar
    setTimeout(() => {
        if (window.ai && window.ai.GoogleGenAI) {
            try {
                ai = new window.ai.GoogleGenAI({ apiKey });
                console.log("Gemini API inicializada com sucesso!");
                // Limpa qualquer mensagem de erro inicial se a inicializa√ß√£o for bem-sucedida
                const resultadoArea = document.getElementById('resultado');
                if (resultadoArea.value.includes("Erro CR√çTICO")) {
                    resultadoArea.value = ""; // Limpa a mensagem de erro
                }
            } catch (e) {
                console.error("ERRO na inicializa√ß√£o direta da Gemini API:", e.message);
                document.getElementById('resultado').value = "Erro CR√çTICO: N√£o foi poss√≠vel inicializar a API. Verifique a chave e a consola.";
            }
        } else {
            console.error("ERRO CR√çTICO: window.ai.GoogleGenAI ainda est√° indefinido ap√≥s o DOM e o atraso. Verifique o link do CDN ou bloqueios.");
            document.getElementById('resultado').value = "Erro CR√çTICO: A Intelig√™ncia Artificial n√£o p√¥de ser carregada. Verifique a sua liga√ß√£o √† internet e a consola.";
        }
    }, 500); // Pequeno atraso de 500ms
});


// ===================================================
// 3. FUN√á√ÉO: O SUPER-PROMPT MESTRE (DEFINI√á√ÉO)
// ===================================================
const superPromptMestre = (prato, tema, contexto, cta) => {
    return `
        Instru√ß√£o Mestra: 
        Voc√™ √© o Assistente Criativo de Conte√∫do (A.C.C.) da Ignite Agent, especialista em branding para restaurantes de Anime/Mang√°.
        
        Perfil da Marca: BugaRAMEN
        Tom de Voz: Jovial, √âpico, Imersivo, Acolhedor. Foco na JORNADA GASTRO-CULTURAL, DESCOBERTA, RITUAL e AVENTURA.
        
        Regras de Marca:
        - N√ÉO USE: "delicioso", "barato", "melhor da cidade", "item lend√°rio", "arma", "ataque", "batalha".
        - USE palavras como: "Miss√£o", "Jornada", "Cap√≠tulo", "Ritual", "Conforto", "Universo", "Magia", "Explora√ß√£o", "Ess√™ncia", "Autenticidade", "Saga".
        - Utilize emojis tem√°ticos: üçúüî•‚õ©Ô∏èüå∏‚ú®üëªüéÉ.

        Objetivo: Criar uma legenda aut√™ntica, criativa e inovadora.

        Com base nos seguintes inputs, gere a legenda:
        1. PRATO/INGREDIENTE: ${prato}
        2. TEMA/VIBE (Anime/Mang√°): ${tema}
        3. CONTEXTO/EVENTO: ${contexto} 
        4. OBJETIVO (CTA): ${cta}
        
        Tarefa Final:
        Crie uma legenda de Instagram com no m√°ximo 4 frases curtas e envolventes. A legenda deve ser imediatamente seguida por uma lista de 5 a 7 hashtags relevantes.
    `;
};


// ===================================================
// 4. FUN√á√ÉO PRINCIPAL: GERAR CONTE√öDO (CHAMADA PELO BOT√ÉO)
// ===================================================
async function gerarLegenda() {
    const pratoInput = document.getElementById('prato').value;
    const temaInput = document.getElementById('tema').value;
    const contextoInput = document.getElementById('contexto').value;
    const ctaInput = document.getElementById('cta').value;
    const resultadoArea = document.getElementById('resultado');

    if (!pratoInput || !ctaInput) {
        resultadoArea.value = "Os campos 'Prato/Ingrediente' e 'Objetivo (CTA)' s√£o essenciais para iniciar a vossa miss√£o criativa.";
        return;
    }
    
    // Verifica se a API foi inicializada com sucesso antes de tentar us√°-la
    if (!ai) {
        resultadoArea.value = "Erro: O Assistente Criativo n√£o est√° pronto. Recarregue a p√°gina e verifique a sua liga√ß√£o √† internet.";
        console.error("Tentativa de usar 'ai' antes da inicializa√ß√£o bem-sucedida.");
        return;
    }

    resultadoArea.value = "A preparar o Super-Prompt... O Assistente Criativo est√° a forjar a sua pr√≥xima obra... ‚úçÔ∏è‚ú®";

    try {
        const promptFinal = superPromptMestre(pratoInput, temaInput, contextoInput, ctaInput);
        
        const response = await ai.models.generateContent({
            model: 'gemini-2.5-flash',
            contents: [{ role: 'user', parts: [{ text: promptFinal }] }],
        });

        resultadoArea.value = response.text.trim();

    } catch (error) {
        console.error("Falha na Miss√£o Criativa:", error);
        resultadoArea.value = `Falha na Miss√£o Criativa. Erro: ${error.message}. Este pode ser um erro na Chave de API, um limite de uso excedido ou um bloqueio de rede.`;
    }
}